using System;
using System.Collections;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace laba5._3
{
    class MyDictionary<TKey, TValue> : IEnumerable<KeyValuePair<TKey, TValue>>
    {
        private TKey[] keys;
        private TValue[] values;
        private int count;

        public MyDictionary()
        {
            keys = new TKey[10];  // Используйте размер, который вам кажется подходящим
            values = new TValue[10];
            count = 0;
        }

        public void Add(TKey key, TValue value)
        {
            // Увеличиваем размер массивов, если не хватает места
            if (count == keys.Length)
            {
                Array.Resize(ref keys, keys.Length * 2);
                Array.Resize(ref values, values.Length * 2);
            }

            keys[count] = key;
            values[count] = value;
            count++;
        }

        public TValue this[TKey key]
        {
            get
            {
                for (int i = 0; i < count; i++)
                {
                    if (EqualityComparer<TKey>.Default.Equals(keys[i], key))
                    {
                        return values[i];
                    }
                }

                throw new KeyNotFoundException($"Key '{key}' not found.");
            }
        }

        public int Count
        {
            get { return count; }
        }

        public IEnumerator<KeyValuePair<TKey, TValue>> GetEnumerator()
        {
            for (int i = 0; i < count; i++)
            {
                yield return new KeyValuePair<TKey, TValue>(keys[i], values[i]);
            }
        }

        IEnumerator IEnumerable.GetEnumerator()
        {
            return GetEnumerator();
        }
    }

    class Program
    {
        static void Main()
        {
            MyDictionary<string, int> myDictionary = new MyDictionary<string, int>();
            myDictionary.Add("One", 1);
            myDictionary.Add("Two", 2);
            myDictionary.Add("Three", 3);

            Console.WriteLine($"Count: {myDictionary.Count}");

            foreach (var kvp in myDictionary)
            {
                Console.WriteLine($"{kvp.Key}: {kvp.Value}");
            }

            Console.WriteLine($"Value for 'Two': {myDictionary["Two"]}");
        }
    }
}
